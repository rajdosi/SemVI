DATA SEGMENT
	FILENAME DB 80 DUP(0)
	LENFILENAME EQU $-FILENAME	
	FILENAME2 DB 80 DUP(0)
	BUFFER DB 256 DUP(0)
	LENBUFFER EQU $-BUFFER
	FILEHANDLE DW ?
	FILEHANDLE2 DW ?
	READCOUNT DW ?
DATA ENDS
MYSTK SEGMENT STACK
	DW 100 DUP(0)
	TOS LABEL WORD
MYSTK ENDS
CODE SEGMENT
ASSUME	CS:CODE, DS:DATA, SS:MYSTK
START:	MOV AX, DATA
	MOV DS, AX
	MOV AX, MYSTK
	MOV SS, AX
	LEA SP, TOS

	;READ FILENAME
	LEA BX, FILENAME
	MOV BYTE PTR[BX], LENFILENAME -2

	MOV AH, 0AH
	LEA DX, FILENAME
	INT 21H
	
	; PUT 00H AT THE END OF FILENAME
	MOV CL, [BX+1]
	MOV CH, 00
	ADD BX, 02
	ADD BX, CX
	MOV BYTE PTR[BX], 00H
	
	;READ FILENAME
	LEA BX, FILENAME2
	MOV BYTE PTR[BX], LENFILENAME -2

	MOV AH, 0AH
	LEA DX, FILENAME2
	INT 21H
	
	; PUT 00H AT THE END OF FILENAME
	MOV CL, [BX+1]
	MOV CH, 00
	ADD BX, 02
	ADD BX, CX
	MOV BYTE PTR[BX], 00H

	; OPEN FILE
	MOV AH, 3DH
	LEA DX, FILENAME
	ADD DX, 02
	MOV AL, 00	;READ ONLY MODE
	INT 21H

	JC ERROR
	MOV FILEHANDLE, AX
	
	; CREATE FILE
	MOV AH, 3CH
	LEA DX, FILENAME2
	ADD DX, 02
	MOV AL, 00	;READ ONLY MODE
	INT 21H

	JC ERROR
	MOV FILEHANDLE2, AX

	;READ FROM FILE
NEXT:	MOV AH, 3FH
	MOV BX, FILEHANDLE
	MOV CX, LENBUFFER 
	LEA DX, BUFFER
	INT 21H
	
	MOV READCOUNT, AX

	;WRITE FILE

	MOV AH, 40H
	MOV BX, FILEHANDLE2
	MOV CX, READCOUNT
	LEA DX, BUFFER
	INT 21H

	CMP READCOUNT, 00
	JBE DONE
	JMP NEXT	
	
DONE:	
	;CLOSE FILE
	MOV AH, 3EH
	MOV BX, FILEHANDLE2
	INT 21H
	MOV AH, 3EH
	MOV BX, FILEHANDLE
	INT 21H

ERROR:	MOV AH, 4CH
	INT 21H

CODE ENDS
	END START